#!/bin/bash
# Author : SunFox
# License :
# Date 14-06-2013
# Mp3Blaster playlist (.lst files) generator.

###Colors definition :
black='\033[1;30m'
red='\033[1;31m'
green='\033[1;32m'
yellow='\033[1;33m'
blue='\033[1;34m'
white='\033[1;37m'
###MAIN Constants
SCRIPT_VERSION="$green v2.0"
SCRIPT_NAME="$green ListGen $blue - Simple Mp3Blaster list generator $green $SCRIPT_VERSION"
SCRIPT_CONFIG_FILE="$HOME/.sfune-sh.cfg"
###Color Function
cecho () {
          #Color-echo function
          #Argument $1 : message.
          #Argument $2 : color.
          NONE=""
          MESSAGE1=${1:-$NONE}
          COLOR1=${2:-$white}
          MESSAGE2=${3:-$NONE}
          COLOR2=${4:-$white}
          echo -e "$COLOR1 $MESSAGE1 $COLOR2 $MESSAGE2"
          return
}
necho () {
          #Color-echo function
          #Argument $1 : message.
          #Argument $2 : color.
          NONE=""
          MESSAGE1=${1:-$NONE}
          COLOR1=${2:-$white}
          MESSAGE2=${3:-$NONE}
          COLOR2=${4:-$white}
          echo -ne "$COLOR1 $MESSAGE1 $COLOR2 $MESSAGE2"
          return
}

###################SfuNe's functions
add_info2cfgfile(){
    necho "$blue ::Music Dir : "; read FILE
    echo ":MD:$FILE" >> $SCRIPT_CONFIG_FILE
    necho "$blue ::List Dir+File : "; read FILE
    if [ "$FILE" == "" ]; then
      FILE=$HOME/list.lst
    fi
    echo ":LF:$FILE" >> $SCRIPT_CONFIG_FILE
    cecho "$blue ::$green $SCRIPT_CONFIG_FILE $blue created!"
   }
show_help(){
  cecho "$green all $yellow --> $blue Add AllGroups"
  cecho "$green create $yellow --> $blue Create/ReCreate ~list.lst"
}

check_config_file(){
     if [ -e $SCRIPT_CONFIG_FILE ]; then
       cecho "$blue ::Loading $green $SCRIPT_CONFIG_FILE.."
       DIR_SOUND=`cat $SCRIPT_CONFIG_FILE | grep ":MD:" | cut -d":" -f3`
       DIR_LIST=`cat $SCRIPT_CONFIG_FILE | grep ":LF:" | cut -d":" -f3`
       if [ "$DIR_SOUND" == "" ]; then
         add_info2cfgfile
       fi
       if [ "$DIR_LIST" == "" ]; then
         add_info2cfgfile
       fi       
     else
       cecho "$blue [$red!!$blue] $green Cfg File $red No found "; 
       echo -n; cecho "$green ::Generating.."
       add_info2cfgfile
     fi
}
###############Functions
#Function load_arrays
#Añade las canciones a lista de reproducción seleccionada
add2list() {
      while read LINE; do
        echo $PWD/"$LINE" >> $DIR_LIST
        NUMBEROF_AUDIO_FILES=`expr $NUMBEROF_AUDIO_FILES + 1`
      done < $HOME/aux.txt
}
group(){
      cd $DIR_SOUND$NAMEGRP
      FILES_INFO=`ls -l -1 | cut -d" " -f1 | grep -v total`
      FILES_NAME="`ls -1`"
      NFILES=`ls | grep -v .rar | wc -l`
      CONT=1
      for I in $FILES_INFO;do
        ARRAY_INFO[$CONT]="$I"
        CONT=`expr $CONT + 1`
      done
      CONT=1
      for I in $FILES_NAME;do
        ARRAY_NAME[$CONT]="$I"
        CONT=`expr $CONT + 1`
      done
      ##########################SEARCHING FOR DIRS
      NDIRS=0;NAUDIO=0
      for ((I=1;I<="$NFILES";I++));do
        LINE=${ARRAY_INFO[$I]}
        if [ "${LINE:0:1}" = "d" ];then
          NDIRS=`expr $NDIRS + 1`
        else
          NAUDIO=`expr $NAUDIO + 1`
        fi
      done
      if [ $NDIRS = "$NFILES" ];then NODIR="f"; fi
      if [ $NAUDIO = "$NFILES" ];then NODIR="y"; fi
##########################################WITH FOLDERS
     case $NODIR in
       "f")  #Si hay directorios
          cecho "$red << $blue $NAMEGRP $blue[$green $ITERATION $blue]"
          echo "<GROUP NAME="\"$NAMEGRP"\">" >> $DIR_LIST
          SAVEIFS=$IFS: IFS=$(echo -en "\n\b")
          for ((I=1;I<="$NFILES";I++));do
            LINE=${ARRAY_INFO[$I]}
            if [ "${LINE:0:1}" = "d" ];then
              cd $DIR_SOUND"$NAMEGRP""/""${ARRAY_NAME[${I}]}"
              FILES_NAME="`ls -1`"
              NUMBER_ALBUM_FILES=`ls | wc -l`
              cecho "$green >> $blue [A] : $red $NUMBER_ALBUM_FILES $yellow ${ARRAY_NAME[${I}]}"
              PWD=`pwd`
              #Fichero auxiliar
              echo "$FILES_NAME" >> $HOME/aux.txt
              add2list
              rm $HOME/aux.txt
              cd ..
            fi
          done
          echo; IFS=$SAVEIFS
          echo "</GROUP>" >> $DIR_LIST
     ;;
############################################## NO FOLDERS
  "y")
      TAMSIZE=${#NFILES}
      while [ $TAMSIZE -lt 2 ] ; do
        NFILES2=$NFILES2" "
        TAMSIZE=${#NFILES2}
      done
      cecho "$blue[$white $NFILES $blue] $blue"$NAMEGRP" $blue[$green $ITERATION $blue]"
      echo "<GROUP NAME="\"$NAMEGRP"\">" >> $DIR_LIST
      PWD=`pwd`
      #Fichero auxiliar
      echo "$FILES_NAME" >> $HOME/aux.txt
      add2list
      echo "</GROUP>" >> $DIR_LIST
      rm $HOME/aux.txt
  ;;
esac
}

check_config_file
cecho "$SCRIPT_NAME"
if [ "$DIR_LIST" != "no" ] && [ "$DIR_SOUND" != "no" ]; then
  if [ "$#" -eq "0" ]; then
    cecho "::Options"; show_help; echo
  else
    case $1 in
      "all")
         echo "<GLOBAL PLAYMODE="\"allgroups"\">" >> $DIR_LIST
         COUNT2SLEEP=0; NUMBEROF_FILES=0; ITERATION=1;
         necho "$blue ::AllGroups : "
         cecho "$blue ::Using $DIR_LIST file :"
         SAVEIFS=$IFS: IFS=$(echo -en "\n\b")
         for I in `ls -1 $DIR_SOUND | tr -s " " "\\ "`; do
           I="$I"; NAMEGRP="$I"
           group; ITERATION=`expr $ITERATION + 1`
#Para que espere un tiempo determinado para visualizar información
#               COUNT2SLEEP=`expr $COUNT2SLEEP + 1`
#               if [ $COUNT2SLEEP -eq 8 ]; then
#                 COUNT2SLEEP=0;sleep 2
#               fi
         done
         echo; IFS=$SAVEIFS
         cecho "$blue ::AudioFiles : $NUMBEROF_AUDIO_FILES"
      ;;
      "create")
          cecho "$blue ::ReNewing $DIR_LIST..."
          if [ -e $DIR_LIST ]; then 
            rm $DIR_LIST
          fi
          touch $DIR_LIST
          cecho "$green >>Done!"
      ;; 
    esac
  fi
else
  cecho "$blue[$red !!$blue] $red ERROR. List and/or Sound variables not set in $green $SCRIPT_CONFIG_FILE"
fi
